{
  "name": "typeson-registry",
  "version": "1.0.0-alpha.9",
  "description": "The type registry for typeson",
  "author": "dfahlander",
  "contributors": [
    "Brett Zamir"
  ],
  "main": "./dist/all.js",
  "module": "./index.js",
  "scripts": {
    "eslint": "eslint browser-test/ test/ presets/ types/ *.js",
    "test": "npm run eslint && npm run rollup && mocha test/test-node",
    "browser-test": "npm run eslint && npm run rollup && npm start test/",
    "rollup": "rollup -c",
    "build": "node ./build.js",
    "windows": "node windows-devinstall"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dfahlander/typeson-registry.git"
  },
  "keywords": [
    "typeson",
    "JSON",
    "remoting",
    "universal"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/dfahlander/typeson-registry/issues"
  },
  "homepage": "https://github.com/dfahlander/typeson-registry#readme",
  "engines": {
    "node": "x"
  },
  "devDependencies": {
    "babel-core": "6.26.0",
    "babel-loader": "7.1.2",
    "babel-plugin-external-helpers": "^6.22.0",
    "babel-preset-es2015": "6.24.1",
    "babelify": "8.0.0",
    "browserify": "14.5.0",
    "browserify-string": "1.1.1",
    "browserify-test": "3.1.0",
    "canvas": "1.6.7",
    "chai": "^4.1.2",
    "eslint": "4.12.1",
    "eslint-config-standard": "10.2.1",
    "eslint-plugin-compat": "2.1.0",
    "eslint-plugin-import": "2.8.0",
    "eslint-plugin-node": "5.2.1",
    "eslint-plugin-promise": "3.6.0",
    "eslint-plugin-standard": "3.0.1",
    "jsdom": "11.5.1",
    "mapstraction": "1.0.1",
    "mocha": "^4.0.1",
    "node-static": "0.7.10",
    "opn": "5.1.0",
    "rollup": "0.52.1",
    "rollup-plugin-babel": "^3.0.2",
    "rollup-plugin-commonjs": "^8.2.6",
    "rollup-plugin-node-builtins": "^2.1.2",
    "rollup-plugin-node-resolve": "^3.0.0",
    "uglifyify": "4.0.5",
    "watchify": "3.9.0",
    "webpack": "3.10.0",
    "whatwg-url": "6.4.0"
  },
  "dependencies": {
    "base64-arraybuffer-es6": "0.1.0",
    "typeson": "5.4.0"
  },
  "tonicExample": "var Typeson = require('typeson');\nvar TSON = new Typeson().register(require('typeson-registry/presets/builtin'));\n\nTSON.stringify({foo: new Date()}, null, 2);"
}
